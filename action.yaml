name: PyPI Auto Publish
description: >
  Automate build and publish PEP 518 compliant projects on Test PyPI and/or
  PyPI if `package.__version__` is ahead of PyPI's.
author: Alireza Hosseini
branding:
  icon: upload-cloud
  color: green

inputs:
  test-pypi-api-token:
    description: >
      API token of the Test PyPI account publishing the project. If missing,
      publish on Test PyPI is skipped.
    required: false

  pypi-api-token:
    description: >
      API token of the PyPI account publishing the project. If missing, publish
      on PyPI is skipped.
    required: false

  package-name:
    description: Name of the PyPI package.
    required: false
    default: ${{ github.event.repository.name }}

runs:
  using: composite
  steps:
    - name: Install dependencies
      run: >
        python3 -m pip install
        -r ${{ github.action_path }}/requirements/main.txt
      shell: bash

    - name: Install local package
      run: python3 -m pip install .
      shell: bash


    - name: Get PyPI info
      id: pypi-info
      run: >
        python3 ${{ github.action_path }}/scripts/pypi_info.py
        ${{ inputs.package-name }}
      shell: bash

    - run: |
        echo should-publish=${{ steps.pypi-info.outputs.should-publish }}
        echo should-publish-test=\
        ${{ steps.pypi-info.outputs.should-publish-test }}
      shell: bash

    - name: Build package
      if: >
        ${{ (
        inputs.test-pypi-api-token
        && steps.pypi-info.outputs.should-publish-test == true
        ) || (
        inputs.pypi-api-token
        && steps.pypi-info.outputs.should-publish == true
        ) }}
      run: |
        python -m build --no-isolation
        twine check dist/*
      shell: bash

    - name: Publish on Test PyPI
      if: >
        ${{
        inputs.test-pypi-api-token
        && steps.pypi-info.outputs.should-publish-test == true
        }}
      run: twine upload --repository testpypi dist/*
      shell: bash
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ inputs.test-pypi-api-token }}

    - name: Publish on PyPI
      if: >
        ${{
        inputs.pypi-api-token
        && steps.pypi-info.outputs.should-publish == true
        }}
      run: twine upload dist/*
      shell: bash
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ inputs.pypi-api-token }}
